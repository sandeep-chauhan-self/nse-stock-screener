[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nse-stock-screener"
version = "0.1.0"
description = "Probabilistic stock screening system for NSE-listed stocks using technical indicators and risk management"
authors = [
    {name = "NSE Stock Screener Team", email = "developer@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9,<4.0"
keywords = ["stocks", "trading", "technical-analysis", "nse", "screening"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Information Analysis"
]

dependencies = [
    "pandas>=2.0.0,<3.0.0",
    "numpy>=1.24.0,<2.0.0",
    "matplotlib>=3.6.0,<4.0.0",
    "seaborn>=0.12.0,<1.0.0",
    "yfinance>=0.2.18,<1.0.0",
    "requests>=2.28.0,<3.0.0",
    "beautifulsoup4>=4.11.0,<5.0.0",
    "python-dateutil>=2.8.0,<3.0.0",
    "pytz>=2022.7",
    "pydantic>=2.0.0,<3.0.0",
    "structlog>=23.0.0,<24.0.0",
    "rich>=13.0.0,<14.0.0",
    "psutil>=5.9.0,<6.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0,<8.0.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.11.0,<4.0.0",
    "pytest-asyncio>=0.21.0,<1.0.0",
    "ruff>=0.1.0,<1.0.0",
    "mypy>=1.5.0,<2.0.0",
    "pre-commit>=3.3.0,<4.0.0",
    "memory-profiler>=0.61.0,<1.0.0"
]
advanced = [
    "ta-lib>=0.4.26,<1.0.0",
    "scikit-learn>=1.3.0,<2.0.0"
]
production = [
    "gunicorn>=21.0.0,<22.0.0",
    "uvicorn>=0.23.0,<1.0.0"
]

[project.urls]
Homepage = "https://github.com/your-org/nse-stock-screener"
Repository = "https://github.com/your-org/nse-stock-screener"
Documentation = "https://your-org.github.io/nse-stock-screener"
"Bug Tracker" = "https://github.com/your-org/nse-stock-screener/issues"

[project.scripts]
nse-screen = "src.enhanced_early_warning_system:main"
nse-backtest = "src.advanced_backtester:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-dir]
"" = "."

# Ruff configuration for linting and formatting
[tool.ruff]
target-version = "py39"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
    "N",  # pep8-naming
]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "B905",  # zip without explicit strict parameter
]
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "build",
    "dist",
    "*.egg-info",
    ".pytest_cache",
    ".coverage"
]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = ["B011"]  # assert False in tests is fine

[tool.ruff.isort]
known-first-party = ["src"]
force-single-line = true

# MyPy configuration for type checking
[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "yfinance.*",
    "matplotlib.*",
    "seaborn.*",
    "ta",
    "sklearn.*"
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests (may fetch live data)",
    "requires_network: Tests that require network access",
    "requires_talib: Tests that require TA-Lib library"
]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = [
    "tests/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/migrations/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]